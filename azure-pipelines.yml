# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  name: default
  demands:
   - agent.name -equals self-linux


trigger:
- main

# pr:
#   branches:
#     include:
#     - Docker/*
#     - helm/*
    
#   # paths:
#   #   exclude:
#   #   - README.md

variables:
- group: incubation
- group: mediawiki-dev

stages:
  - stage: mediawiki
    displayName: mediawiki
    jobs:
      - job: mediawiki
        steps:
        - task: CopyFiles@2
          inputs:
            SourceFolder: 'docker'
            Contents: '**'
            TargetFolder: '$(build.artifactstagingdirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'

        - task: Docker@2
          inputs:
            containerRegistry: 'shivani-acr'
            repository: 'mediawiki'
            command: 'buildAndPush'
            Dockerfile: 'docker/Dockerfile'
        # - task: Docker@2
        #   inputs:
        #     containerRegistry: 'azure acr'
        #     repository: 'mediawiki'
        #     command: 'buildAndPush'
        #     Dockerfile: 'docker/Dockerfile'
        
        - task: HelmInstaller@0
          inputs:
            helmVersion: '3.8.2'
            checkLatestHelmVersion: false
            installKubectl: true
        # - task: HelmDeploy@0
        #   inputs:
        #     # connectionType: 'Azure Resource Manager'
        #     azureSubscription: 'shivani'
        #     azureResourceGroup: 'featuress'
        #     kubernetesCluster: 'featuress-testd-aks'
        #     command: 'ls'
        - task: HelmDeploy@0
          inputs:
            command: 'package'
            chartPath: 'helm'
            arguments: '--version 0.0.$(Build.BuildId)'


              
        

